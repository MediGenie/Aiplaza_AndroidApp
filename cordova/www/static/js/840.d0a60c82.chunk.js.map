{"version":3,"file":"static/js/840.d0a60c82.chunk.js","mappings":"gLAOuB,aAQtB,OARsB,0BAAvB,WAAwBA,GAAY,8EACH,OAAzBC,EAAG,sBAAkBD,GAAI,kBAENE,EAAAA,EAAAA,IAAkBD,GAAK,KAAD,EAA/B,OAARE,EAAQ,yBACPA,EAASC,MAAI,uCAEdC,EAAAA,EAAAA,GAAgB,EAAD,IAAI,KAAD,qDAE3B,sBAEyB,aAQzB,OARyB,0BAA1B,WAA2BC,GAAc,8EACf,OAAlBL,EAAG,iBAAaK,GAAE,kBAECJ,EAAAA,EAAAA,IAAkBD,GAAK,KAAD,EAA/B,OAARE,EAAQ,yBACPA,EAASC,MAAI,uCAEdC,EAAAA,EAAAA,GAAgB,EAAD,IAAI,KAAD,qDAE3B,sBAEM,IAAME,EAAY,CAAEC,SA1BiB,SAMpB,GAAD,gCAoBcC,YAZpC,SAE0B,GAAD,gC,6ICuF1B,UA7F8B,WAC5B,OAAwBC,EAAAA,EAAAA,eAAkCC,GAAU,eAA7DP,EAAI,KAAEQ,EAAO,KACpB,GAAwBF,EAAAA,EAAAA,UAAS,GAAE,eAA5BV,EAAI,KAAEa,EAAO,KACpB,GAAuCH,EAAAA,EAAAA,UAAS,GAAE,eAA3CI,EAAY,KAAEC,EAAc,KACnC,GAA0BL,EAAAA,EAAAA,UAAS,CAAEM,MAAM,EAAOC,QAAS,KAAK,eAAzDC,EAAK,KAAEC,EAAQ,KAChBC,GAAWC,EAAAA,EAAAA,MAoBjB,OAVAC,EAAAA,EAAAA,kBAAgB,WACdf,EAAAA,EAAAA,SACYP,GACTuB,MAAK,SAACC,GACLZ,EAAQY,EAAIC,MACZV,EAAeS,EAAIE,MACrB,IACCC,OAAM,SAACC,GAAW,OAhBJC,EAgBmBD,EAAEX,aAftCE,EAAS,CAAEF,QAASY,EAAKb,MAAM,IADf,IAACa,CAgB6B,GAChD,GAAG,CAAC7B,KAGF,4BACE,SAAC,IAAU,CACTiB,QAASC,EAAMD,QACfa,KAAMZ,EAAMF,KACZe,QApBc,WAClBZ,GAAS,SAACa,GAAI,yBAAWA,GAAI,IAAEhB,MAAM,GAAK,IAC1CI,EAAS,IACX,EAkBMa,MAAM,kBAER,gBAAKC,UAAU,YAAW,UACxB,gBAAKA,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,+BAA8B,WAC3C,eAAIA,UAAU,oBAAmB,uCACjC,gBAAKA,UAAU,mBAAkB,UAC/B,mBAAOA,UAAU,oCAAmC,WAClD,kBAAOA,UAAU,WAAU,UACzB,gBAAIA,UAAU,oCAAmC,WAC/C,eAAIA,UAAU,gCAA+B,kBAC7C,eAAIA,UAAU,gCAA+B,2BAC7C,eAAIA,UAAU,gCAA+B,sCAGjD,gCACYvB,IAATP,EACCA,EAAK+B,KAAI,SAACC,EAAkBC,GAC1B,IAAMC,EAAKC,IAAAA,GACLH,EAAMI,WAAY,cACrBC,OAAO,cACV,OACE,gBACEP,UAAU,8CAA6C,WAGvD,eAAIA,UAAU,kCAAiC,SAC5CE,EAAMC,SAET,eAAIH,UAAU,sBAAqB,UACjC,SAAC,KAAI,CAACQ,GAAE,gBAAmBC,MAAOP,EAAMQ,IAAI,SACzCR,EAAMH,WAGX,eAAIC,UAAU,kCAAiC,SAC5CI,MAXED,EAeX,KAEA,gCAKR,gBAAKH,UAAU,QAAO,UACpB,SAAC,IAAU,CACTW,YAAa7C,EACb8C,SAAU,GACVC,YAAajC,EACbkC,oBAAoB,GACpBC,SAAU,SAACC,GAAI,OAAKrC,EAAQqC,EAAK,eAQjD,C","sources":["apis/board/index.ts","pages/board.tsx"],"sourcesContent":["import { ApiErrorFactory } from '../api-error';\nimport { axiosInstance } from '../instance';\n\ninterface RouteState {\n  _id: string;\n}\n\nasync function getBoard(page: number) {\n  const url = `/board?page=${page}`;\n  try {\n    const response = await axiosInstance.get(url);\n    return response.data\n  } catch (e) {\n    throw ApiErrorFactory(e);\n  }\n}\n\nasync function getOneBoard(id: RouteState) {\n  const url = `/board/${id}`;\n  try {\n    const response = await axiosInstance.get(url);\n    return response.data\n  } catch (e) {\n    throw ApiErrorFactory(e);\n  }\n}\n\nexport const boardApis = { getBoard, getOneBoard };\n","import moment from \"moment-timezone\";\nimport { FC, useLayoutEffect, useMemo, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { ApiError } from \"../apis/api-error\";\nimport { boardApis } from \"../apis/board\";\nimport Pagination from \"../components/Pagination/Pagination\";\nimport { AlertModal } from \"../modals\";\nimport { BoardType } from \"../types/board.types\";\n\ninterface BoardProps {}\n\nconst Board: FC<BoardProps> = () => {\n  const [data, setData] = useState<BoardType[] | undefined>(undefined);\n  const [page, setPage] = useState(1);\n  const [total_number, setTotalNumber] = useState(0);\n  const [modal, setModal] = useState({ show: false, message: \"\" });\n  const navigate = useNavigate();\n  const showModal = (msg: string) => {\n    setModal({ message: msg, show: true });\n  };\n\n  const hiddenModal = () => {\n    setModal((prev) => ({ ...prev, show: false }));\n    navigate(\"/\");\n  };\n\n  useLayoutEffect(() => {\n    boardApis\n      .getBoard(page)\n      .then((res) => {\n        setData(res.rows);\n        setTotalNumber(res.count);\n      })\n      .catch((e: ApiError) => showModal(e.message));\n  }, [page]);\n\n  return (\n    <div>\n      <AlertModal\n        message={modal.message}\n        open={modal.show}\n        onClose={hiddenModal}\n        title=\"알림\"\n      />\n      <div className=\"container\">\n        <div className=\"py-20 px-[10px]\">\n          <div className=\"flex flex-col justify-center\">\n            <h1 className=\"text-h2 font-bold\">공지사항</h1>\n            <div className=\" overflow-x-auto\">\n              <table className=\"mt-10 relative w-full table-fixed\">\n                <thead className=\"bg-black\">\n                  <tr className=\"text-b3 font-semibold text-white \">\n                    <th className=\"w-[150px] py-[12px] px-[15px]\">No.</th>\n                    <th className=\"w-[800px] py-[12px] px-[15px]\">제목</th>\n                    <th className=\"w-[210px] py-[12px] px-[15px]\">등록일</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data !== undefined ? (\n                    data.map((value: BoardType, index: number) => {\n                      const mo = moment\n                        .tz(value.created_at, \"Asia/Seoul\")\n                        .format(\"YYYY.MM.DD\");\n                      return (\n                        <tr\n                          className=\"text-b3 font-normal border-b border-gray300\"\n                          key={index}\n                        >\n                          <td className=\"text-center py-[12px] px-[15px]\">\n                            {value.index}\n                          </td>\n                          <td className=\"py-[12px] px-[15px]\">\n                            <Link to={`/board-detail`} state={value._id}>\n                              {value.title}\n                            </Link>\n                          </td>\n                          <td className=\"text-center py-[12px] px-[15px]\">\n                            {mo}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  ) : (\n                    <></>\n                  )}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"mt-10\">\n              <Pagination\n                currentPage={page}\n                pageSize={10}\n                totalNumber={total_number}\n                containterClassName=\"\"\n                onChange={(next) => setPage(next)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n"],"names":["page","url","axiosInstance","response","data","ApiErrorFactory","id","boardApis","getBoard","getOneBoard","useState","undefined","setData","setPage","total_number","setTotalNumber","show","message","modal","setModal","navigate","useNavigate","useLayoutEffect","then","res","rows","count","catch","e","msg","open","onClose","prev","title","className","map","value","index","mo","moment","created_at","format","to","state","_id","currentPage","pageSize","totalNumber","containterClassName","onChange","next"],"sourceRoot":""}