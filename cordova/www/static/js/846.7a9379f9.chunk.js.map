{"version":3,"file":"static/js/846.7a9379f9.chunk.js","mappings":"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","sources":["pages/consumer/service/index.tsx"],"sourcesContent":["import { FC, useEffect, useLayoutEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { ApiError } from \"../../../apis/api-error\";\nimport { consumerServiceApis } from \"../../../apis/service\";\nimport {\n  Favorites,\n  FilterButton,\n  NotFavorites,\n  SearchIcon,\n} from \"../../../assets\";\nimport { useAuthValue } from \"../../../auth/hooks\";\nimport { Select } from \"../../../components/SelectButton/Select\";\nimport { FavoriteDefault, WhiteStar } from \"../../../icons\";\nimport { AlertModal } from \"../../../modals\";\nimport { BookMarkType } from \"../../../types/bookmark.type\";\nimport { PaginateData } from \"../../../types/paginate-data.interface\";\nimport { ServiceListItemFull } from \"../../../types/service\";\n\ninterface ServiceProps {}\n\nconst Service: FC<ServiceProps> = () => {\n  const [page, setPage] = useState<number>(2);\n  const [sort, setSort] = useState<string>(\"created_at\");\n  const [data, setData] = useState<PaginateData<ServiceListItemFull>>({\n    page_size: 0,\n    rows: [],\n    total_number: 0,\n  });\n  const [search, setSearch] = useState<string>(\"\");\n  const [modal, setModal] = useState({ show: false, message: \"\" });\n  const [fetching, setFetching] = useState(false);\n  const [bookmark, setBookMark] = useState<BookMarkType[]>([]);\n  const { user } = useAuthValue();\n  const [ctBookMark, setCtBookMark] = useState(false);\n  const [headerSearchResult, setHeaderSearchResult] = useState(\"\");\n\n  const getFullBookMark = () => {\n    if (ctBookMark === false) {\n      consumerServiceApis\n        .getFullBookMark(user?._id)\n        .then((res) => {\n          setData({\n            page_size: data.page_size,\n            rows: [...res],\n            total_number: data.total_number,\n          });\n          setCtBookMark(!ctBookMark);\n        })\n        .catch((e: ApiError) => showModal(e.message));\n    } else {\n      setPage(2);\n      consumerServiceApis\n        .getServiceList(1, sort, search)\n        .then((res) => {\n          setData(res);\n          setCtBookMark(!ctBookMark);\n        })\n        .catch((e: ApiError) => showModal(e.message));\n    }\n    setHeaderSearchResult(\"\");\n  };\n\n  const bookMarkHandler = (_id: string) => {\n    consumerServiceApis\n      .createBookMark(user?._id, _id)\n      .then((res) => {\n        setBookMark(res);\n      })\n      .catch((e: ApiError) => showModal(e.message));\n  };\n\n  const searchGetItems = () => {\n    setHeaderSearchResult(search);\n    setPage(2);\n    consumerServiceApis\n      .getServiceList(1, sort, search)\n      .then((res) => {\n        setData(res);\n        setCtBookMark(false);\n      })\n      .catch((e: ApiError) => showModal(e.message));\n  };\n\n  const handleScroll = () => {\n    const scrollHeight = document.documentElement.scrollHeight;\n    const scrollTop = document.documentElement.scrollTop;\n    const clientHeight = document.documentElement.clientHeight;\n    if (scrollTop + clientHeight >= scrollHeight && fetching === false) {\n      // 페이지 끝에 도달하면 추가 데이터를 받아온다\n      setFetching(true);\n      setPage(page + 1);\n      consumerServiceApis\n        .getServiceList(page, sort, search)\n        .then((res) => {\n          setData({\n            page_size: res.page_size,\n            rows: [...data.rows, ...res.rows],\n            total_number: res.total_number,\n          });\n        })\n        .catch((e: ApiError) => showModal(e.message));\n      setFetching(false);\n    }\n  };\n\n  useEffect(() => {\n    // scroll event listener 등록\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      // scroll event listener 해제\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  });\n\n  useLayoutEffect(() => {\n    setPage(2);\n    setData({\n      page_size: 0,\n      rows: [],\n      total_number: 0,\n    });\n    consumerServiceApis\n      .getServiceList(1, sort, search)\n      .then((res) => {\n        setData(res);\n        setCtBookMark(false);\n      })\n      .catch((e: ApiError) => showModal(e.message));\n\n    consumerServiceApis\n      .getBookMarkList(user?._id)\n      .then((res) => {\n        setBookMark(res);\n        setCtBookMark(false);\n      })\n      .catch((e: ApiError) => showModal(e.message));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sort]);\n\n  const navigate = useNavigate();\n  const showModal = (msg: string) => {\n    setModal({ message: msg, show: true });\n  };\n\n  const hiddenModal = () => {\n    setModal((prev) => ({ ...prev, show: false }));\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"container p-[30px] mt-[50px]\">\n      <AlertModal\n        title=\"오류\"\n        message={modal.message}\n        open={modal.show}\n        onClose={hiddenModal}\n      />\n      <div className=\"flex justify-between max-md:flex-col\">\n        <h1 className=\"text-h2 font-bold\">Services List</h1>\n        <div className=\" max-md:pt-[20px]\">\n          <div className=\"flex items-center space-x-2.5  max-md:space-x-0 max-md:flex-col max-md:items-start\">\n            <button\n              onClick={getFullBookMark}\n              className=\" rounded-[5px] bg-gray100 w-10 h-10 flex items-center justify-center\"\n            >\n              <img\n                className=\"w-5 h-5\"\n                src={ctBookMark ? Favorites : FavoriteDefault}\n                alt=\"즐겨찾기\"\n              />\n            </button>\n            <div className=\"flex space-x-2.5 max-md:mt-2.5 max-md:justify-between max-sm:flex-col max-md:space-x-0 w-full\">\n              <div className=\"h-10 bg-gray100 px-5 rounded-full flex items-center space-x-[3px] max-md:w-full\">\n                <input\n                  className=\"bg-gray100 border-0 max-w-[86px] text-b2 max-md:w-full max-md:max-w-full\"\n                  style={{ fontSize: \"15px\" }}\n                  onChange={(e) => setSearch(e.target.value)}\n                  placeholder=\"검색\"\n                />\n                <button type=\"submit\" onClick={() => searchGetItems()}>\n                  <img src={SearchIcon} alt=\"검색버튼\" className=\"w-5 h-5\" />\n                </button>\n              </div>\n              <div className=\"max-md:flex max-md:justify-end max-md:w-[300px] max-sm:w-full max-sm:mt-2.5\">\n                <Select\n                  data={[\n                    { value: \"-created_at\", label: \"최신순\" },\n                    { value: \"name\", label: \"가나다순\" },\n                    { value: \"user_count\", label: \"이용자순\" },\n                  ]}\n                  setValue={setSort}\n                  value={sort}\n                  img={FilterButton}\n                  imgAlt=\"orderBy\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {headerSearchResult !== \"\" ? (\n        <div className=\" font-bold text-b1 mt-5 mb-10\">\n          <span className=\" text-blue500\">{headerSearchResult}</span>\n          <span className=\"text-gray600\">에 대한 검색결과</span>\n        </div>\n      ) : (\n        <></>\n      )}\n      <div className=\"mt-10 grid grid-cols-4 gap-10  max-sm:grid-cols-1 max-md:grid-cols-2\">\n        {data !== undefined && data.rows.length !== 0 ? (\n          data.rows.map((value, index) => {\n            let checked = false;\n            if (bookmark) {\n              bookmark.map((v2, i2) => {\n                if (value._id === bookmark[i2].service) {\n                  checked = true;\n                }\n              });\n            }\n            return (\n              <div className=\"border border-gray200 rounded-lg overflow-hidden\">\n                <div\n                  className=\"flex items-end justify-end min-h-[160px] !bg-no-repeat !bg-cover !bg-center\"\n                  style={{\n                    background: `url(${data.rows[index].thumbnail.url})`,\n                  }}\n                >\n                  <button\n                    onClick={() => bookMarkHandler(value._id)}\n                    className=\"m-2.5 rounded-[5px] w-8 h-8 flex items-center justify-center\"\n                    style={{\n                      background: `rgba(28, 28, 30, 0.5)`,\n                    }}\n                  >\n                    <img\n                      className=\"w-4 h-4\"\n                      src={checked ? Favorites : WhiteStar}\n                      alt={checked ? \"선택됨\" : \"선택되지않음\"}\n                    />\n                  </button>\n                </div>\n                <Link to={`/consumer/service/${value._id}`}>\n                  <div className=\"mt-[-5px] px-5 py-5\">\n                    <p\n                      className=\"text-b2 max-w-[218px] break-words line-clamp-1\"\n                      style={{ fontWeight: 600 }}\n                    >\n                      {value.name}\n                    </p>\n                    <p\n                      className=\"mt-[5px] text-gray600 font-normal text-b2 break-words line-clamp-2\"\n                      style={{ fontSize: \"15px\", lineHeight: \"24px\" }}\n                    >\n                      {value.description}\n                    </p>\n                  </div>\n                </Link>\n              </div>\n            );\n          })\n        ) : (\n          <h2 className=\"text-center font-bold absolute left-1/2 -translate-x-1/2\">\n            등록된 서비스가 존재하지 않습니다.\n          </h2>\n        )}\n      </div>\n      <div className=\"mt-20\"></div>\n    </div>\n  );\n};\n\nexport default Service;\n"],"names":["useState","page","setPage","sort","setSort","page_size","rows","total_number","data","setData","search","setSearch","show","message","modal","setModal","fetching","setFetching","bookmark","setBookMark","user","useAuthValue","ctBookMark","setCtBookMark","headerSearchResult","setHeaderSearchResult","handleScroll","scrollHeight","document","documentElement","scrollTop","clientHeight","consumerServiceApis","then","res","catch","e","showModal","useEffect","window","addEventListener","removeEventListener","useLayoutEffect","_id","navigate","useNavigate","msg","className","title","open","onClose","prev","onClick","src","Favorites","FavoriteDefault","alt","style","fontSize","onChange","target","value","placeholder","type","SearchIcon","label","setValue","img","FilterButton","imgAlt","undefined","length","map","index","checked","v2","i2","service","background","thumbnail","url","WhiteStar","to","fontWeight","name","lineHeight","description"],"sourceRoot":""}