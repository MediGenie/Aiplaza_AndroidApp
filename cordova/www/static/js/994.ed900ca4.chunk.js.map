{"version":3,"file":"static/js/994.ed900ca4.chunk.js","mappings":"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","sources":["components/FormikComponent/FormikInputBox.tsx","components/FormikComponent/FormikInputArea.tsx","components/FormikComponent/FormikDropDown.tsx","hooks/useModalState.ts","yups/find-pw.yup.ts","pages/find-pw.tsx"],"sourcesContent":["import { useField } from 'formik';\nimport { DetailedHTMLProps, FC, InputHTMLAttributes } from 'react';\nimport { InputBox } from '../InputBox';\n\ninterface FormikInputBoxProps\n  extends Omit<\n    DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>,\n    'type' | 'value' | 'onChange' | 'onBlur' | 'name'\n  > {\n  error?: boolean;\n  secure?: boolean;\n  name: string;\n}\n\nexport const FormikInputBox: FC<FormikInputBoxProps> = ({ name, ...props }) => {\n  const [formik_props, meta] = useField(name);\n  return (\n    <div>\n      <InputBox {...props} {...formik_props} error={!!meta.error} />\n      {meta.error && <p className=\"error-msg\">{meta.error}</p>}\n    </div>\n  );\n};\n","import { useField } from \"formik\";\nimport { DetailedHTMLProps, FC, TextareaHTMLAttributes } from \"react\";\nimport { InputArea } from \"../InputArea\";\n\ninterface FormikInputAreaProps\n  extends Omit<\n    DetailedHTMLProps<\n      TextareaHTMLAttributes<HTMLTextAreaElement>,\n      HTMLTextAreaElement\n    >,\n    \"type\" | \"value\" | \"onChange\" | \"onBlur\" | \"name\"\n  > {\n  error?: boolean;\n  name: string;\n}\n\nexport const FormikInputArea: FC<FormikInputAreaProps> = ({\n  name,\n  ...props\n}) => {\n  const [formik_props, meta] = useField(name);\n  return (\n    <div>\n      <InputArea {...props} {...formik_props} error={!!meta.error} />\n      {meta.error && <p className=\"error-msg\">{meta.error}</p>}\n    </div>\n  );\n};\n","import { useField } from 'formik';\nimport { FC } from 'react';\nimport { DropDown, DropDownData } from '../DropDown';\n\ninterface FormikDropdownProps {\n  placeholder?: string;\n  className?: string;\n  name: string;\n  data: DropDownData[];\n}\n\nexport const FormikDropdown: FC<FormikDropdownProps> = ({\n  name,\n  data,\n  className,\n  placeholder,\n}) => {\n  const [props, meta, helper] = useField(name);\n  const handleChange = (value: any) => helper.setValue(value);\n  return (\n    <div>\n      <DropDown\n        data={data}\n        value={props.value}\n        onChange={handleChange}\n        className={className}\n        placeholder={placeholder}\n        error={!!meta.error}\n      />\n      {meta.error && <p className=\"error-msg\">{meta.error}</p>}\n    </div>\n  );\n};\n","import { useState } from 'react';\n\nexport function useModalState() {\n  const [show, setShow] = useState(false);\n  const [message, setMessage] = useState('');\n  const showModal = (msg: string) => {\n    setShow(true);\n    setMessage(msg);\n  };\n  const hideModal = () => {\n    setShow(false);\n  };\n\n  return {\n    showModal,\n    hideModal,\n    props: {\n      open: show,\n      message,\n      onClose: hideModal,\n    },\n  };\n}\n","import * as yup from 'yup';\n\nexport const FindPwYup = yup.object().shape({\n  email: yup\n    .string()\n    .email('이메일 형식으로 입력해 주세요.')\n    .required('아이디를 입력해 주세요.'),\n});\n","import { FormikProvider, useFormik, Form } from 'formik';\nimport { FC } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { ApiError } from '../apis/api-error';\nimport { authApis } from '../apis/auth';\nimport { FindPwIlust } from '../assets';\nimport { UserType } from '../auth/type';\nimport { Button } from '../components/Button';\nimport { FormikInputBox } from '../components/FormikComponent';\nimport { useModalState } from '../hooks/useModalState';\nimport { useRouteState } from '../hooks/useRouteState';\nimport { AlertModal } from '../modals';\nimport { FindPwYup } from '../yups/find-pw.yup';\n\ninterface FidnPwProps {}\n\ninterface RouteState {\n  type: UserType;\n}\n\nconst FidnPw: FC<FidnPwProps> = () => {\n  const routeState = useRouteState<RouteState>();\n  const { props: modalProps, showModal } = useModalState();\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n    },\n    onSubmit: async (values, helper) => {\n      if (routeState?.type === undefined) {\n        return helper.setSubmitting(false);\n      }\n      await authApis\n        .resetPassword({\n          email: values.email,\n          type: routeState.type,\n        })\n        .then(() => {\n          navigate('/find-pw/done', {\n            state: {\n              email: values.email,\n            },\n          });\n        })\n        .catch((e: ApiError) => {\n          showModal(e.message);\n        });\n    },\n    validationSchema: FindPwYup,\n  });\n\n  if (routeState?.type === undefined) {\n    return <Navigate to=\"/404\" replace />;\n  }\n\n  return (\n    <div className=\"py-20\" style={{ minHeight: 792 }}>\n      <AlertModal title=\"알림\" {...modalProps} />\n      <div className=\"container\">\n        <div\n          className=\"mx-auto rounded bg-white p-10\"\n          style={{\n            boxShadow: '0px 5px 18px 2px rgba(72, 72, 74, 0.1)',\n            maxWidth: 408,\n          }}\n        >\n          <img\n            src={FindPwIlust}\n            style={{ width: 120, height: 120 }}\n            alt=\"비밀번호 찾기\"\n            className=\"mx-auto mb-5\"\n          />\n          <div className=\"mb-10\">\n            <h1 className=\"mb-2.5 font-bold text-h2 text-center\">\n              비밀번호 찾기\n            </h1>\n            <p className=\"text-b3 text-gray800 text-center\">\n              입력하신 이메일 주소로 임시비밀번호가 발송됩니다.\n            </p>\n          </div>\n          <FormikProvider value={formik}>\n            <Form className=\"space-y-5\">\n              <FormikInputBox\n                name=\"email\"\n                className=\"w-full\"\n                placeholder=\"아이디(이메일)을 입력해 주세요.\"\n              />\n              <Button\n                className=\"w-full\"\n                type=\"submit\"\n                disabled={formik.isSubmitting || formik.dirty === false}\n              >\n                완료\n              </Button>\n            </Form>\n          </FormikProvider>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FidnPw;\n"],"names":["FormikInputBox","name","props","useField","formik_props","meta","InputBox","error","className","FormikInputArea","InputArea","FormikDropdown","data","placeholder","helper","DropDown","value","onChange","setValue","useModalState","useState","show","setShow","message","setMessage","hideModal","showModal","msg","open","onClose","FindPwYup","yup","shape","email","required","routeState","useRouteState","modalProps","navigate","useNavigate","formik","useFormik","initialValues","onSubmit","values","undefined","type","setSubmitting","authApis","then","state","catch","e","validationSchema","to","replace","style","minHeight","title","boxShadow","maxWidth","src","FindPwIlust","width","height","alt","Button","disabled","isSubmitting","dirty"],"sourceRoot":""}