{"version":3,"file":"static/js/17.1b49f090.chunk.js","mappings":"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","sources":["pages/consumer/request/index.tsx"],"sourcesContent":["import { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport classNames from \"classnames\";\nimport moment from \"moment-timezone\";\nimport { FC, useLayoutEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { ApiError } from \"../../../apis/api-error\";\nimport { consumerRequestApis } from \"../../../apis/request\";\nimport { FilterButton, SearchIcon } from \"../../../assets\";\nimport Pagination from \"../../../components/Pagination/Pagination\";\nimport { Select } from \"../../../components/SelectButton/Select\";\nimport {\n  download,\n  GrayDownload,\n  GrayWatch,\n  WhiteDownload,\n  WhiteWatch,\n} from \"../../../icons\";\nimport { AlertModal } from \"../../../modals\";\nimport { BoardType } from \"../../../types/board.types\";\nimport { PaginateData } from \"../../../types/paginate-data.interface\";\nimport { ServiceUsageType } from \"../../../types/service-usage.type\";\nimport { MyDoc } from \"../../response/Doc\";\nimport { Th } from \"./th-styled\";\n\ninterface RequestProps {}\n\nconst Request: FC<RequestProps> = () => {\n  const [page, setPage] = useState<number>(1);\n  const [sort, setSort] = useState<string>(\"-created_at\");\n  const [data, setData] = useState<ServiceUsageType[] | undefined>(undefined);\n  const [total_number, setTotalNumber] = useState(0);\n  const [search, setSearch] = useState<string>(\"\");\n  const [modal, setModal] = useState({ show: false, message: \"\" });\n\n  useLayoutEffect(() => {\n    consumerRequestApis\n      .getRequestList(page, sort, search)\n      .then((res) => {\n        setData(res.rows);\n        setTotalNumber(res.count);\n      })\n      .catch((e: ApiError) => showModal(e.message));\n  }, [page, sort]);\n\n  const searchGetItems = () => {\n    consumerRequestApis\n      .getRequestList(page, sort, search)\n      .then((res) => {\n        setData(res.rows);\n        setTotalNumber(res.count);\n      })\n      .catch((e: ApiError) => showModal(e.message));\n  };\n\n  const navigate = useNavigate();\n  const showModal = (msg: string) => {\n    setModal({ message: msg, show: true });\n  };\n\n  const hiddenModal = () => {\n    setModal((prev) => ({ ...prev, show: false }));\n    navigate(\"/\");\n  };\n  return (\n    <div className=\"container p-[30px] mt-[50px]\">\n      <AlertModal\n        title=\"오류\"\n        message={modal.message}\n        open={modal.show}\n        onClose={hiddenModal}\n      />\n      <div className=\"flex justify-between max-md:flex-col \">\n        <h1 className=\"text-h2 font-bold\">Request List</h1>\n        <div className=\"flex items-center space-x-2.5 max-md:flex-col max-md:items-start max-md:space-x-0 max-md:space-y-2.5 max-md:mt-2.5\">\n          <div className=\"h-10 bg-gray100 px-5 rounded-full flex items-center space-x-[3px] max-md:w-full\">\n            <input\n              className=\"bg-gray100 border-0 max-w-[86px] text-b2 max-md:w-full max-md:max-w-full\"\n              style={{ fontSize: \"15px\" }}\n              onChange={(e) => setSearch(e.target.value)}\n              placeholder=\"검색\"\n            />\n            <button type=\"submit\" onClick={() => searchGetItems()}>\n              <img src={SearchIcon} alt=\"검색버튼\" className=\"w-5 h-5\" />\n            </button>\n          </div>\n          <div className=\"max-md:w-full max-md:flex max-md:justify-end\">\n            <Select\n              data={[\n                { value: \"created_at\", label: \"전체\" },\n                { value: \"analysis\", label: \"분석중\" },\n                { value: \"complete\", label: \"완료\" },\n                { value: \"unused\", label: \"이용전\" },\n                { value: \"resultAt\", label: \"응답일\" },\n              ]}\n              setValue={setSort}\n              value={sort}\n              img={FilterButton}\n              imgAlt=\"orderBy\"\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"overflow-x-auto\">\n        <table className=\"mt-10 table-fixed relative w-full\">\n          <thead className=\"bg-black\">\n            <tr className=\"text-b3 font-semibold text-white\">\n              <Th className=\"w-[109px]\">No.</Th>\n              <Th className=\"w-[310px]\">서비스명</Th>\n              <Th className=\"w-[150px]\">응답일</Th>\n              <Th className=\"w-[150px]\">분석완료일</Th>\n              <Th className=\"w-[110px]\">상태</Th>\n              <Th className=\"w-[110px]\">응답보기</Th>\n              <Th className=\"w-[110px]\">결과보기</Th>\n              <Th className=\"w-[110px]\">PDF 다운</Th>\n            </tr>\n          </thead>\n          <tbody>\n            {data?.length !== 0 ? (\n              data?.map((value: ServiceUsageType, i: number) => {\n                value.resultAt = moment\n                  .tz(value.resultAt, \"Asia/Seoul\")\n                  .format(\"YYYY.MM.DD\");\n                value.updatedAt = moment\n                  .tz(value.updatedAt, \"Asia/Seoul\")\n                  .format(\"YYYY.MM.DD\");\n                if (\n                  value.status === \"이용완료\" &&\n                  value.response !== null &&\n                  value.result !== null\n                ) {\n                  value.status = \"완료\";\n                } else if (\n                  value.status === \"이용전\" &&\n                  value.response === null &&\n                  value.result === null\n                ) {\n                  value.resultAt = \"-\";\n                  value.updatedAt = \"-\";\n                  value.status = \"이용전\";\n                } else if (\n                  value.response === null &&\n                  value.resultAt !== \"\" &&\n                  value.result !== null\n                ) {\n                  value.updatedAt = \"-\";\n                  value.status = \"분석중\";\n                }\n                return (\n                  <tr\n                    className=\"text-b3 font-normal border-b border-gray300\"\n                    key={i}\n                  >\n                    <td className=\"text-center py-[12px] px-[15px]\">\n                      {value.index}\n                    </td>\n                    <td className=\"py-[12px] px-[15px]\">\n                      <Link to={`/consumer/service/${value.service._id}`}>\n                        {value.service.name}\n                      </Link>\n                    </td>\n                    <td className=\"text-center py-[12px] px-[15px]\">\n                      {value.resultAt}\n                    </td>\n                    <td className=\"text-center py-[12px] px-[15px]\">\n                      {value.updatedAt}\n                    </td>\n                    <td className=\"text-center py-[12px] px-[15px]\">\n                      {value.status}\n                    </td>\n                    <td className=\"py-[12px] px-[35px]\">\n                      <Link\n                        to={\"/consumer/request/result\"}\n                        state={value._id}\n                        className={classNames(\n                          \"w-10 h-10 rounded flex items-center justify-center\",\n                          {\n                            \"bg-gray100 pointer-events-none\":\n                              value.result === null,\n                            \"bg-blue500\": value.result !== null,\n                          }\n                        )}\n                      >\n                        <img\n                          src={value.result === null ? GrayWatch : WhiteWatch}\n                          alt=\"응답보기\"\n                        />\n                      </Link>\n                    </td>\n                    <td className=\"py-[12px] px-[35px]\">\n                      <button\n                        disabled={value.response === null}\n                        onClick={() =>\n                          navigate(\"/common/responsereport\", {\n                            state: { _id: value._id },\n                          })\n                        }\n                        className={classNames(\n                          \"w-10 h-10 rounded flex items-center justify-center\",\n                          {\n                            \"bg-gray100\": value.response === null,\n                            \"bg-blue500\": value.response !== null,\n                          }\n                        )}\n                      >\n                        <img\n                          src={value.response === null ? GrayWatch : WhiteWatch}\n                          alt=\"결과보기\"\n                        />\n                      </button>\n                    </td>\n                    <td className=\"py-[12px] px-[35px]\">\n                      <button\n                        disabled={value.response === null}\n                        className={classNames(\n                          \"w-10 h-10 rounded flex items-center justify-center\",\n                          {\n                            \"bg-gray100\": value.response === null,\n                            \"bg-blue500\": value.response !== null,\n                          }\n                        )}\n                      >\n                        {data[i].response !== null ? (\n                          <PDFDownloadLink\n                            document={\n                              <MyDoc\n                                data={{\n                                  response: data[i].response,\n                                  thumbnail_content: data[i].thumbnail_content,\n                                }}\n                                response_title={data[i].response.title}\n                              />\n                            }\n                            fileName={`${data[i].response.title}.pdf`}\n                          >\n                            <img src={WhiteDownload} alt=\"PDF 다운\" />\n                          </PDFDownloadLink>\n                        ) : (\n                          <img src={GrayDownload} alt=\"PDF 다운\" />\n                        )}\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })\n            ) : (\n              <tr>\n                <td\n                  className=\"border-b border-gray300 py-5 w-full\"\n                  colSpan={999}\n                >\n                  <h2 className=\"text-center font-bold\">\n                    서비스 사용에 대한 정보가 없습니다.\n                  </h2>\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"mt-10\">\n        <Pagination\n          currentPage={page}\n          pageSize={10}\n          totalNumber={total_number}\n          containterClassName=\"\"\n          onChange={(next) => setPage(next)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Request;\n"],"names":["useState","page","setPage","sort","setSort","undefined","data","setData","total_number","setTotalNumber","search","setSearch","show","message","modal","setModal","useLayoutEffect","consumerRequestApis","then","res","rows","count","catch","e","showModal","navigate","useNavigate","msg","className","title","open","onClose","prev","style","fontSize","onChange","target","value","placeholder","type","onClick","src","SearchIcon","alt","label","setValue","img","FilterButton","imgAlt","Th","length","map","i","resultAt","moment","format","updatedAt","status","response","result","index","to","service","_id","name","state","classNames","GrayWatch","WhiteWatch","disabled","document","thumbnail_content","response_title","fileName","WhiteDownload","GrayDownload","colSpan","currentPage","pageSize","totalNumber","containterClassName","next"],"sourceRoot":""}